USE ROLE ACCOUNTADMIN;
USE WAREHOUSE COMPUTE_WH;
USE DATABASE SELLERX;
USE SCHEMA SELLERX.DEV;

SELECT * FROM AVGTRANSACT_TYPOLOGY_COUNTRY;
SELECT
    STORE_TYPOLOGY,
    STORE_COUNTRY,
    AVG_TRANSACTION_AMOUNT
FROM SELLERX.DEV.MASTER_DEVICE_STORE_TRANSACTIONS
WHERE AVG_TRANSACTION_AMOUNT IS NOT NULL
GROUP BY STORE_TYPOLOGY, STORE_COUNTRY, AVG_TRANSACTION_AMOUNT
ORDER BY AVG_TRANSACTION_AMOUNT DESC
LIMIT 5;


SELECT * FROM FIRST5_TRANSACT_STORE;
SELECT
    STORE_NAME,
    HOURS_TO_5_TRANSACTIONS
FROM SELLERX.DEV.MASTER_DEVICE_STORE_TRANSACTIONS
WHERE HOURS_TO_5_TRANSACTIONS IS NOT NULL
GROUP BY STORE_NAME, HOURS_TO_5_TRANSACTIONS
ORDER BY HOURS_TO_5_TRANSACTIONS DESC
LIMIT 5;



SELECT * FROM PERTRANSACT_DEVICETYPE;
SELECT
    DEVICE_TYPE,
    DEVICE_TRANSACTION_PERCENT
FROM SELLERX.DEV.MASTER_DEVICE_STORE_TRANSACTIONS
WHERE DEVICE_TRANSACTION_PERCENT IS NOT NULL
GROUP BY DEVICE_TYPE, DEVICE_TRANSACTION_PERCENT
ORDER BY DEVICE_TRANSACTION_PERCENT DESC
LIMIT 5;


SELECT * FROM TOP10_PRODUCTS;
SELECT
    TRANSACTIONS_PRODUCT_NAME2 AS PRODUCT_NAME,
    MAX(PRODUCT2_SOLD_COUNT) AS TOTAL_SOLD
FROM SELLERX.DEV.MASTER_DEVICE_STORE_TRANSACTIONS
GROUP BY TRANSACTIONS_PRODUCT_NAME2
ORDER BY TOTAL_SOLD DESC
LIMIT 20;



SELECT * FROM TOP10_STORES;
SELECT
    STORE_NAME,
    TOTAL_TRANSACTED_AMOUNT
FROM SELLERX.DEV.MASTER_DEVICE_STORE_TRANSACTIONS
GROUP BY STORE_NAME, TOTAL_TRANSACTED_AMOUNT
ORDER BY TOTAL_TRANSACTED_AMOUNT DESC
LIMIT 10;



SELECT * FROM MASTER_DEVICE_STORE_TRANSACTIONS;


WITH fct_transactions AS (
    SELECT *
    FROM SELLERX.DEV.FCT_TRANSACTIONS
    WHERE TRANSACTIONS_STATUS = 'accepted'
),

dim_device AS (
    SELECT *
    FROM SELLERX.DEV.DIM_DEVICE
),

dim_store AS (
    SELECT *
    FROM SELLERX.DEV.DIM_STORE
),

joined_data AS (
    SELECT
        FT.*,
        DD.DEVICE_ID,
        DD.DEVICE_TYPE,
        DD.STORE_ID AS DEVICE_STORE_ID,
        DS.STORE_NAME,
        DS.STORE_CUSTOMER_ID,
        DS.STORE_ADDRESS,
        DS.STORE_CITY,
        DS.STORE_COUNTRY,
        DS.STORE_TYPOLOGY,
        DS.CREATED_AT AS STORE_CREATED_AT,
        TO_TIMESTAMP(FT.HAPPENED_AT, 'MM/DD/YYYY HH24:MI') AS HAPPENED_AT_TS
    FROM fct_transactions FT
    JOIN dim_device DD ON FT.TRANSACTIONS_DEVICE_ID = DD.DEVICE_ID
    JOIN dim_store DS ON DD.STORE_ID = DS.STORE_ID
),

-- ðŸŸ¦ Metric 1: Total transacted amount per store
store_totals AS (
    SELECT
        STORE_NAME,
        SUM(TRANSACTIONS_AMOUNT) AS TOTAL_TRANSACTED_AMOUNT
    FROM joined_data
    GROUP BY STORE_NAME
),

-- ðŸŸ¦ Metric 2: Total count per product2
product2_counts AS (
    SELECT
        TRANSACTIONS_PRODUCT_NAME2,
        COUNT(*) AS PRODUCT2_SOLD_COUNT
    FROM joined_data
    GROUP BY TRANSACTIONS_PRODUCT_NAME2
),

-- ðŸŸ¦ Metric 3: Avg amount per store
store_avg_amount AS (
    SELECT
        STORE_NAME,
        ROUND(AVG(TRANSACTIONS_AMOUNT), 2) AS AVG_TRANSACTION_AMOUNT
    FROM joined_data
    GROUP BY STORE_NAME
),

-- ðŸŸ¦ Metric 4: % of transactions per device type
device_type_distribution AS (
    SELECT
        DEVICE_TYPE,
        COUNT(*) AS TOTAL_BY_DEVICE,
        ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (), 2) AS DEVICE_TRANSACTION_PERCENT
    FROM joined_data
    GROUP BY DEVICE_TYPE
),

-- ðŸŸ¦ Metric 5: Avg time in hours for first 5 transactions per store
ranked_txn AS (
    SELECT
        STORE_NAME,
        HAPPENED_AT_TS,
        ROW_NUMBER() OVER (PARTITION BY STORE_NAME ORDER BY HAPPENED_AT_TS) AS RN
    FROM joined_data
),

first_5_txn AS (
    SELECT * FROM ranked_txn WHERE RN <= 5
),

store_time_to_5 AS (
    SELECT
        STORE_NAME,
        ROUND(DATEDIFF('SECOND', MIN(HAPPENED_AT_TS), MAX(HAPPENED_AT_TS)) / 3600.0, 2) AS HOURS_TO_5_TRANSACTIONS
    FROM first_5_txn
    GROUP BY STORE_NAME
    HAVING COUNT(*) = 5
)

-- ðŸŸ© Final Result (can be adjusted for what you want to display)
SELECT
    JD.TRANSACTIONS_ID,
    JD.TRANSACTIONS_PRODUCT_NAME,
    JD.TRANSACTIONS_PRODUCT_NAME2,
    JD.TRANSACTIONS_PRODUCT_SKU,
    JD.TRANSACTIONS_AMOUNT,
    JD.TRANSACTIONS_STATUS,
    JD.TRANSACTIONS_CARD_NUMBER,
    JD.TRANSACTIONS_CVV,
    JD.CREATED_AT AS TRANSACTION_CREATED_AT,
    JD.HAPPENED_AT,
    
    JD.DEVICE_ID,
    JD.DEVICE_TYPE,
    DTD.DEVICE_TRANSACTION_PERCENT,

    JD.STORE_NAME,
    JD.STORE_COUNTRY,
    JD.STORE_TYPOLOGY,
    JD.STORE_ADDRESS,
    JD.STORE_CITY,
    JD.STORE_CUSTOMER_ID,
    JD.STORE_CREATED_AT,

    ST.TOTAL_TRANSACTED_AMOUNT,
    SA.AVG_TRANSACTION_AMOUNT,
    PC.PRODUCT2_SOLD_COUNT,
    STT.HOURS_TO_5_TRANSACTIONS

FROM joined_data JD
LEFT JOIN store_totals ST ON JD.STORE_NAME = ST.STORE_NAME
LEFT JOIN store_avg_amount SA ON JD.STORE_NAME = SA.STORE_NAME
LEFT JOIN product2_counts PC ON JD.TRANSACTIONS_PRODUCT_NAME2 = PC.TRANSACTIONS_PRODUCT_NAME2
LEFT JOIN device_type_distribution DTD ON JD.DEVICE_TYPE = DTD.DEVICE_TYPE
LEFT JOIN store_time_to_5 STT ON JD.STORE_NAME = STT.STORE_NAME;